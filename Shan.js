var table = ee.FeatureCollection("users/BiswasS/Shan"),
    tcc = ee.Image("users/BiswasS/tcc_myanmar_calib_2018_wgs84_bd"),
    geometry = /* color: #d63000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.65039846655662, 24.039511593193225],
              [96.65048161503609, 24.03929358154962],
              [96.6507176494294, 24.03943075745843],
              [96.65061840769584, 24.03956548365483],
              [96.65048966166313, 24.03960957583388]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry2 = /* color: #98ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.65114680287178, 24.039842284305845],
              [96.65110656973656, 24.039751650530047],
              [96.65120044705208, 24.039472400116036],
              [96.65127018448646, 24.039467500980553],
              [96.65135333296593, 24.03954588712595],
              [96.65129700657661, 24.03983738518447]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry3 = /* color: #0b4a8b */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.65270784851845, 24.03983983474518],
              [96.65286341664131, 24.039741852280173],
              [96.652986798256, 24.039856981668873],
              [96.65283659455116, 24.03995986316295]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry4 = /* color: #ffc82d */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.65173420664604, 24.039303379833697],
              [96.65168860909279, 24.03932297639956],
              [96.65152499434288, 24.03922254396786],
              [96.65173152443703, 24.03902167886888],
              [96.65201047417457, 24.03918580037567],
              [96.65216336008842, 24.039320526829002],
              [96.65209362265404, 24.039418509615384],
              [96.65180662628944, 24.039398913064087]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry5 = /* color: #00ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.67844632622536, 24.066018070517078],
              [96.67943337914284, 24.066013172394577],
              [96.67942265030678, 24.06680176770873],
              [96.67845169064339, 24.06679197152338]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry6 = /* color: #bf04c2 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.6360406016999, 24.00812880904447],
              [96.63602450844581, 24.008023451903796],
              [96.63608083483513, 24.007949946870827],
              [96.63620689865883, 24.008021001736704],
              [96.63616398331459, 24.00812145854909]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry7 = /* color: #ff0000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.62947187182243, 24.005089343382814],
              [96.6295389270478, 24.004996234877126],
              [96.62966230866249, 24.005089343382814],
              [96.62976423260505, 24.005045239362204],
              [96.62991980072792, 24.005010936224597],
              [96.6300056314164, 24.005130997166184],
              [96.62982324120338, 24.005300062383743],
              [96.62960866448219, 24.005297612164792]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry8 = /* color: #00ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.5416483020478, 23.981503786587236],
              [96.54163757321174, 23.981391055629782],
              [96.54181996342476, 23.981368999561354],
              [96.54182264563377, 23.981498885243305],
              [96.54172340390022, 23.981555250687183]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry9 = /* color: #0000ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.75540426728065, 23.993721031864336],
              [96.75511458870704, 23.993730833621576],
              [96.75508240219887, 23.993054510621082],
              [96.75536135193641, 23.992799663351352],
              [96.75564030167396, 23.992804564265146],
              [96.75609091278847, 23.993211339459386],
              [96.75609091278847, 23.993446582358594],
              [96.75589242932136, 23.993446582358594],
              [96.75589242932136, 23.993632816015584],
              [96.75569931027229, 23.993637716897663],
              [96.75569394585426, 23.993814148527985],
              [96.75540963169868, 23.993814148527985]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry10 = /* color: #999900 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.75135681387718, 23.992514184801042],
              [96.75186643359001, 23.99229119253167],
              [96.75222316738899, 23.99258524819035],
              [96.75178060290153, 23.99298957362429],
              [96.7514131402665, 23.992786185837463]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry11 = /* color: #009999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.74027929064567, 23.989750033566292],
              [96.74086669441994, 23.989750033566292],
              [96.7408613300019, 23.989970579726435],
              [96.74028733727272, 23.98996812921563]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry12 = /* color: #ff00ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.73927882668312, 23.989328544298182],
              [96.73967579361732, 23.989328544298182],
              [96.73968384024437, 23.98969122119311],
              [96.73927882668312, 23.989688770676967]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry13 = /* color: #ff9999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.79091939684685, 24.01210781555753],
              [96.79088184592064, 24.011980410852605],
              [96.79086575266655, 24.011870156679173],
              [96.79101327416237, 24.01185055592734],
              [96.79110715147789, 24.011951009748934],
              [96.79124126192863, 24.01202451249552],
              [96.79113933798607, 24.012078414482982],
              [96.79105350729759, 24.012156817333516]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry14 = /* color: #99ff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.7923329209977, 24.011921608638534],
              [96.7923329209977, 24.011838305455917],
              [96.7924965357476, 24.011777053081342],
              [96.79267087933357, 24.011818704699223],
              [96.79281035420235, 24.012034312858557],
              [96.79276207444008, 24.01213231644785],
              [96.79249921795662, 24.012102915378918],
              [96.79240802285011, 24.012004911767196]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry15 = /* color: #9999ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.79297933337028, 24.01074555871161],
              [96.79307857510383, 24.010549549345],
              [96.79320195671852, 24.0106132524219],
              [96.7933253383332, 24.010515247675134],
              [96.79342189785774, 24.010549549345],
              [96.79342994448479, 24.010716157325643],
              [96.79321804997261, 24.010694106281775],
              [96.79316708800133, 24.01083866305611]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry16 = /* color: #ffff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.82809481379326, 23.990015914168122],
              [96.82809481379326, 23.989609128877298],
              [96.8283898567849, 23.989614029912552],
              [96.82838181015785, 23.990025716207473]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry17 = /* color: #99ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.83002063986595, 23.990361435604466],
              [96.83043638226326, 23.99038103962979],
              [96.8304256534272, 23.99080742644215],
              [96.83003673312004, 23.990792723472122]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry18 = /* color: #ff99ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.81744376179512, 23.99354214966364],
              [96.81793728825386, 23.993527447005942],
              [96.81794801708992, 23.993997931219134],
              [96.817422304123, 23.994002832087308]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry19 = /* color: #d63000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.78533503767784, 23.739445030335197],
              [96.78539404627617, 23.73931490172012],
              [96.78553083893593, 23.73935909635868],
              [96.78555497881706, 23.73945730661293],
              [96.78550669905479, 23.739538330016927],
              [96.7853994106942, 23.739530964255007]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry21 = /* color: #0b4a8b */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.91078463551338, 23.70547950916392],
              [96.91201040503319, 23.70547705326854],
              [96.9119594430619, 23.70615979040144],
              [96.9108060931855, 23.706162246283963]]]),
        {
          "system:index": "0",
          "Class": "Lowland_Evergreen"
        }),
    geometry22 = /* color: #ffc82d */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.06680336949165, 23.63760057609124],
              [97.06738004442985, 23.637607947604483],
              [97.06738004442985, 23.63797897990092],
              [97.06679800507362, 23.637969151244373]]]),
        {
          "Class": "Lowland_Evergreen",
          "system:index": "0"
        }),
    geometry23 = /* color: #00ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.0668301915818, 23.636163123078802],
              [97.06721374747093, 23.636168037474967],
              [97.06721106526192, 23.636625075511592],
              [97.06681678053673, 23.63661524675339]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry24 = /* color: #bf04c2 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.07590410467918, 23.63031117496696],
              [97.07630911824043, 23.630055614691052],
              [97.07678386923607, 23.630205510682583],
              [97.07676241156395, 23.630569192047265],
              [97.07644322869118, 23.63076577614819],
              [97.07623669859703, 23.63075594695016]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry25 = /* color: #ff0000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.085055801838, 23.62851364186708],
              [97.08638617750938, 23.62851364186708],
              [97.08639422413643, 23.629096030549373],
              [97.08507189509209, 23.629103402541414]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry26 = /* color: #00ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.08324799296196, 23.607969883469064],
              [97.08387026545341, 23.607967425742064],
              [97.08385685440834, 23.608955428283934],
              [97.08325335737999, 23.608952970575405]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry27 = /* color: #0000ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.12384859082039, 23.66563389578572],
              [97.12451914307411, 23.66584762369744],
              [97.1243743037873, 23.666154703418727],
              [97.12374130245979, 23.66597782558734]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry28 = /* color: #999900 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.20773735997017, 23.681588829080745],
              [97.20838109013374, 23.681596198114846],
              [97.20838109013374, 23.68215869982443],
              [97.20775613543327, 23.682161156158465]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry29 = /* color: #009999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.21020767447288, 23.681286698324648],
              [97.21059927698906, 23.68129161102546],
              [97.21059659478004, 23.681475837172457],
              [97.21078434941109, 23.681537245830388],
              [97.21073875185783, 23.681832006986642],
              [97.21036860701378, 23.681812356263578]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry30 = /* color: #ff00ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.215271685093, 23.679454248037],
              [97.21634993311699, 23.67942477141483],
              [97.21636066195305, 23.67998482609898],
              [97.2153253292733, 23.679975000598905]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry31 = /* color: #ff9999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.2308499550515, 23.67956478531094],
              [97.23197648283775, 23.68040977827055],
              [97.2313917612725, 23.681235114955005],
              [97.23027059790428, 23.68107790836948]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry32 = /* color: #99ff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.24126229044731, 23.68250258613947],
              [97.24162707087334, 23.682517324104175],
              [97.24161634203728, 23.68340159894332],
              [97.24124619719322, 23.683381948456383]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry33 = /* color: #9999ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.25236395355995, 23.687779899355817],
              [97.25418249127205, 23.687686562645286],
              [97.2542468642884, 23.688757474578935],
              [97.25234786030586, 23.688772211837865]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry34 = /* color: #ffff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.27279165741737, 23.698300729626617],
              [97.27279165741737, 23.697018675443385],
              [97.27431515213783, 23.69703832387837],
              [97.27431515213783, 23.698315465808406],
              [97.27287212368782, 23.698295817565654]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry35 = /* color: #99ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.31203773972328, 23.70916575600756],
              [97.31347540375526, 23.709175579311047],
              [97.3134646749192, 23.709873031967838],
              [97.31209674832161, 23.70985829709111]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry36 = /* color: #ff99ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.314328346222, 23.70754981251659],
              [97.31514373776253, 23.708075364723413],
              [97.31438735482033, 23.708615649832044],
              [97.31368461605842, 23.708340595874493]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry37 = /* color: #d63000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.36970523354347, 23.722109772398944],
              [97.37067887541588, 23.722291485358852],
              [97.37050989624794, 23.722969223353964],
              [97.36945578810509, 23.722782600199544]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry38 = /* color: #98ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.45164403673942, 23.762749459464903],
              [97.45255598780449, 23.76333370442388],
              [97.45231458899315, 23.763913037171307],
              [97.45144555327232, 23.763363162083447]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry39 = /* color: #0b4a8b */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.5948042607003, 23.81259967596796],
              [97.59559283015068, 23.81225613301545],
              [97.59652087446983, 23.81386096158373],
              [97.5959576105767, 23.81413088492914],
              [97.59540507551964, 23.813900223196118],
              [97.5951636767083, 23.813443806218736]]]),
        {
          "Class": "Lowland_Evergreen",
          "system:index": "0"
        }),
    geometry40 = /* color: #ffc82d */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.58602807280357, 23.814089169539713],
              [97.58603880163963, 23.813765261353794],
              [97.58674154040153, 23.813775076765232],
              [97.58662888762291, 23.81407444645789],
              [97.5867361759835, 23.814903844131763],
              [97.58602807280357, 23.81490875179454]]]),
        {
          "Class": "Lowland_Evergreen",
          "system:index": "0"
        }),
    geometry41 = /* color: #00ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.54923352953728, 23.80300957839174],
              [97.55014548060234, 23.802994854053637],
              [97.5501562094384, 23.803647631439453],
              [97.54916915652092, 23.803652539527675]]]),
        {
          "Class": "Lowland_Evergreen",
          "system:index": "0"
        }),
    geometry42 = /* color: #bf04c2 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.60974684712227, 23.820462880205074],
              [97.60957518574531, 23.820207692414602],
              [97.60926404949959, 23.8198200023112],
              [97.60974148270424, 23.819628610567356],
              [97.61003116127785, 23.819859262121213],
              [97.61036375519569, 23.819942689178053],
              [97.61051932331856, 23.82022241480077],
              [97.61021891590889, 23.82067390049893]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry43 = /* color: #ff0000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.60543385502632, 23.81497868596889],
              [97.60484913346107, 23.8148314560843],
              [97.6049617862397, 23.81448791903755],
              [97.60555187222297, 23.81452718046034],
              [97.6056108808213, 23.814090396463122],
              [97.6060614919358, 23.8141149349289],
              [97.60664621350105, 23.81502776255998],
              [97.60644236561592, 23.81523879169026],
              [97.60613122937019, 23.81559704966075],
              [97.6053212022477, 23.815474358686288]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry44 = /* color: #00ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.60395864006813, 23.812362876815907],
              [97.60477939602669, 23.81199970214771],
              [97.60522464272316, 23.81350637960896],
              [97.6048169469529, 23.813638887865128]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry45 = /* color: #0000ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.60517636296089, 23.806755641174874],
              [97.6040981149369, 23.80514581675575],
              [97.6045111751252, 23.80486115060539],
              [97.60570207592781, 23.80660840196564]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry46 = /* color: #999900 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.60391572472389, 23.803148232493665],
              [97.60330954548652, 23.802161699203488],
              [97.60407129284675, 23.801533455193276],
              [97.60476866719063, 23.801896659132222],
              [97.60498324391182, 23.802240229491115]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry47 = /* color: #009999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.66771743056114, 23.816192099241817],
              [97.66752162930305, 23.81585838104979],
              [97.66777375695045, 23.815723421243213],
              [97.66831019875343, 23.81627307485025],
              [97.6680714821511, 23.816525816575897]]]),
        {
          "Class": "Unknown_2",
          "system:index": "0"
        }),
    geometry48 = /* color: #ff00ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.68364706990059, 23.821078764055574],
              [97.68470922467048, 23.82050950099722],
              [97.68513301369484, 23.821162190328483],
              [97.6842264270478, 23.821638209800795]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry49 = /* color: #ff9999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.81237700936134, 23.921472857166453],
              [97.81311193463142, 23.921266904729308],
              [97.8134498929673, 23.922262338466656],
              [97.81265059468086, 23.922419253429698]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry50 = /* color: #99ff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.95924941059883, 24.0168645758967],
              [97.96023109909828, 24.017486874045996],
              [97.95975903031166, 24.018030769962],
              [97.95884171482857, 24.01736437464839]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry51 = /* color: #9999ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.95522073265846, 24.020929059402473],
              [97.95530656334694, 24.019743292076225],
              [97.95631507393654, 24.020223480162343],
              [97.95603612419899, 24.021889424923565],
              [97.95545676705177, 24.02172283141891]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry52 = /* color: #ffff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.97974148747261, 24.02931731587641],
              [97.97977903839882, 24.02865587861824],
              [97.98180678841408, 24.028773467712934],
              [97.98169950005348, 24.029552492747793]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry53 = /* color: #99ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.82914618012245, 19.660936777457735],
              [97.83010104653175, 19.660967087494495],
              [97.83014396187599, 19.662906917930982],
              [97.82923201081093, 19.662906917930982]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry54 = /* color: #ff99ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.80058601853187, 19.657643052662674],
              [97.80097762104805, 19.657658207993023],
              [97.80096689221199, 19.65810781547499],
              [97.80059674736793, 19.658102763712538]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry55 = /* color: #d63000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.79839733597572, 19.65736015290017],
              [97.79907325264747, 19.65736015290017],
              [97.79907325264747, 19.65780976121765],
              [97.79840270039375, 19.65780470944579]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry56 = /* color: #98ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.76805082318123, 19.674779027558653],
              [97.76898691412742, 19.674794181269185],
              [97.76898691412742, 19.675324560234497],
              [97.76805350539024, 19.675311932184297]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry57 = /* color: #0b4a8b */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.76681968924339, 19.685241060758884],
              [97.76682773587044, 19.685051651626644],
              [97.7660472130471, 19.68505670253975],
              [97.7660472130471, 19.68469808731377],
              [97.76671776530083, 19.684700612775913],
              [97.76739099976356, 19.68471576554795],
              [97.76738295313652, 19.685251162572982]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry20 = /* color: #ffc82d */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.6618488168412, 21.672760252275733],
              [96.6625140046769, 21.672762744874678],
              [96.66250059363182, 21.673370937730805],
              [96.66186491009529, 21.673370937730805]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry58 = /* color: #d63000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.69981280323799, 20.39116600154343],
              [96.70039752480324, 20.391206227623357],
              [96.70038679596718, 20.391643685564706],
              [96.69980207440193, 20.391643685564706]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry59 = /* color: #98ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.69451275822456, 20.393554406845293],
              [96.69537642952736, 20.39353178002135],
              [96.69537911173637, 20.39391643557647],
              [96.69452348706062, 20.39391140740548]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry60 = /* color: #0b4a8b */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.75403634068306, 20.459281348064707],
              [96.75403634068306, 20.458155512092375],
              [96.75657907482918, 20.45812535565819],
              [96.75659516808327, 20.459256217887535],
              [96.75449768063362, 20.459256217887535]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry61 = /* color: #ffc82d */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.71370664593513, 20.47583621487897],
              [96.71377101895149, 20.475203001450133],
              [96.71464005467232, 20.475248231067425],
              [96.71458641049202, 20.475901546274514]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry62 = /* color: #00ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.45903486367996, 23.8067053344636],
              [97.4594211017781, 23.806695518517717],
              [97.45941573736008, 23.806911469155928],
              [97.45906705018814, 23.806911469155928]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry63 = /* color: #bf04c2 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.46180558559234, 23.803316335055676],
              [97.46219182369049, 23.803308972904222],
              [97.46220255252655, 23.804035369837095],
              [97.46180558559234, 23.804035369837095]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry64 = /* color: #ff0000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.34896505233581, 23.708586179792757],
              [97.349539045065, 23.708586179792757],
              [97.349539045065, 23.7089791131007],
              [97.34897041675384, 23.708974201441652]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry65 = /* color: #00ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.34584296104248, 23.70972199940232],
              [97.34583759662445, 23.708857549484975],
              [97.34650814887817, 23.708882107800317],
              [97.34649205562408, 23.709756380814685]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry66 = /* color: #d63000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[101.10992232319649, 21.77042701927475],
              [101.11240604874428, 21.770571491799263],
              [101.11239531990822, 21.77223540624931],
              [101.10995450970466, 21.77223540624931]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry67 = /* color: #98ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[101.10125878807838, 21.773538128194144],
              [101.10166648384865, 21.773538128194144],
              [101.10165575501259, 21.77263145489909],
              [101.10297003742988, 21.772656363582666],
              [101.10287347790535, 21.77430032713464],
              [101.10131243225868, 21.77428040041651]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry68 = /* color: #0b4a8b */ee.Feature(
        ee.Geometry.Polygon(
            [[[101.11167648789223, 21.725890170473768],
              [101.1136345004731, 21.72594498740946],
              [101.11357012745674, 21.72756955256137],
              [101.11164966580208, 21.72753965275507]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry69 = /* color: #ffc82d */ee.Feature(
        ee.Geometry.Polygon(
            [[[101.10442915913399, 21.710378629976532],
              [101.10480466839607, 21.710388597768475],
              [101.1048636769944, 21.709032971725065],
              [101.10766926762398, 21.709077827202833],
              [101.1076370811158, 21.71102155114335],
              [101.10441843029793, 21.71101656726939]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry70 = /* color: #00ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[101.14425459858711, 21.66797189014117],
              [101.1456225251847, 21.668026729129192],
              [101.1456225251847, 21.669288020098037],
              [101.14426532742317, 21.669288020098037]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry71 = /* color: #bf04c2 */ee.Feature(
        ee.Geometry.Polygon(
            [[[101.1432273125344, 21.595043781429876],
              [101.14355454203422, 21.59421080298157],
              [101.14575931784447, 21.594205815072243],
              [101.1456573939019, 21.595956560692233],
              [101.1432809567147, 21.59591665789397]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry72 = /* color: #ff0000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[101.08546325918968, 21.761804486142797],
              [101.08728179690178, 21.76188419992963],
              [101.08728179690178, 21.763333986702403],
              [101.08546862360771, 21.763333986702403]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry73 = /* color: #00ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[101.04811618086632, 21.736819506573536],
              [101.04975769278343, 21.736839438491614],
              [101.0497523283654, 21.73830940982969],
              [101.04815909621055, 21.73827951225736]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry74 = /* color: #0000ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[101.01653585192497, 21.710342496724962],
              [101.01823100802238, 21.710327545031994],
              [101.01823637244041, 21.71129441797963],
              [101.01660558935936, 21.711274482520526]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry75 = /* color: #999900 */ee.Feature(
        ee.Geometry.Polygon(
            [[[100.98142573592003, 21.562948201871038],
              [100.9829331373864, 21.562948201871038],
              [100.98285267111595, 21.564135575615076],
              [100.98144719359215, 21.564115619834176]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry76 = /* color: #009999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[100.94514349457558, 21.546575921054732],
              [100.94580868241127, 21.546585900152206],
              [100.94580063578422, 21.54762871205489],
              [100.94515422341163, 21.54762122778563]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry77 = /* color: #ff00ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[101.12296858784492, 21.501569453342366],
              [101.12434456106956, 21.50157693998455],
              [101.12434724327858, 21.502395477205976],
              [101.12298468109901, 21.502380504005497]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry78 = /* color: #ff9999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[101.13119760510261, 21.510362248986],
              [101.13400319573219, 21.510402175325492],
              [101.13403001782234, 21.511517613002518],
              [101.1311412787133, 21.511497649987316]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry79 = /* color: #99ff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[100.9864092802697, 21.67396417255317],
              [100.9864092802697, 21.67277271527013],
              [100.98907003161247, 21.67277271527013],
              [100.98900565859611, 21.67359527051371],
              [100.98827609774406, 21.673645122195826],
              [100.98820099589165, 21.674004053798186]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry80 = /* color: #9999ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[100.87787101027305, 21.671613652188974],
              [100.87918529269035, 21.671613652188974],
              [100.87917992827232, 21.67398660575486],
              [100.8778978323632, 21.67398660575486]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry81 = /* color: #ffff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[100.81031957623298, 21.58583211996972],
              [100.81030884739693, 21.58564755652956],
              [100.81054488179024, 21.585657532937745],
              [100.81082383152778, 21.585670003447017],
              [100.81082114931877, 21.58600920088713],
              [100.81054756399925, 21.58600920088713]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry82 = /* color: #99ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[100.76937833782966, 21.52591522354019],
              [100.77070334908302, 21.5259102332811],
              [100.77069262024696, 21.527152802500936],
              [100.76934615132149, 21.527147812284355]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry83 = /* color: #ff99ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[100.80393591877754, 21.30216257021339],
              [100.80395201203163, 21.301602803488503],
              [100.8077822065049, 21.3015728159252],
              [100.80777684208687, 21.30217256602838],
              [100.8043972587281, 21.30216257021339]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry84 = /* color: #d63000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[100.69589385744865, 21.265692063610953],
              [100.69588581082161, 21.265072168060808],
              [100.69748440739448, 21.265069668476684],
              [100.69747904297645, 21.265692063610953],
              [100.69656172749336, 21.26568956403737]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry85 = /* color: #98ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[100.42609313484962, 21.167032143590287],
              [100.42647400852974, 21.16651188371591],
              [100.42761126515205, 21.166516886223402],
              [100.42761126515205, 21.16774249546487],
              [100.42601266857918, 21.1677374929988]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry86 = /* color: #0b4a8b */ee.Feature(
        ee.Geometry.Polygon(
            [[[100.64399847742851, 20.894592185705836],
              [100.64467707630928, 20.89460471481511],
              [100.64467439410026, 20.89500063412996],
              [100.64403066393669, 20.89499562249958]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry87 = /* color: #ffc82d */ee.Feature(
        ee.Geometry.Polygon(
            [[[100.19869277235802, 20.75807196807048],
              [100.19978174921806, 20.75807196807048],
              [100.19976029154594, 20.759130380111795],
              [100.19868740793999, 20.759105299343467]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry88 = /* color: #00ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[100.18657991644676, 20.743260946527013],
              [100.18655845877464, 20.741605433172545],
              [100.19078562018211, 20.741565299290563],
              [100.19081780669029, 20.743281013244417]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry89 = /* color: #bf04c2 */ee.Feature(
        ee.Geometry.Polygon(
            [[[99.96396729704674, 20.50186731596082],
              [99.96398339030083, 20.501495492153374],
              [99.96539423224266, 20.50147036889061],
              [99.96540496107872, 20.50210347385651],
              [99.9648792481118, 20.50242504998026],
              [99.96412822958763, 20.502384853001708]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry90 = /* color: #ff0000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[99.83699956890877, 20.38775994585733],
              [99.83755478617485, 20.38774737492745],
              [99.83755746838386, 20.388380948517824],
              [99.83703711983497, 20.388388491044875]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry91 = /* color: #00ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[99.76964125391777, 20.441594340942874],
              [99.77189430949028, 20.441634553846566],
              [99.77190503832634, 20.442438809711373],
              [99.76965198275383, 20.442398597018055]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry92 = /* color: #0000ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[99.58763727900322, 20.389328789860823],
              [99.58831051346596, 20.389331304021084],
              [99.58830246683891, 20.38967322943563],
              [99.58765069004829, 20.38966820112621]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry93 = /* color: #999900 */ee.Feature(
        ee.Geometry.Polygon(
            [[[99.42215168830688, 20.152750414045627],
              [99.42325139400299, 20.152790701998182],
              [99.42327285167511, 20.15333458834011],
              [99.42218387481506, 20.153384948090732]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry94 = /* color: #009999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[99.2845919167691, 20.535988984546208],
              [99.28742432948883, 20.536029172702168],
              [99.28745651599701, 20.53760654948209],
              [99.28446317073639, 20.537596502547707]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry95 = /* color: #ff00ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[98.94609713908966, 19.77888712294381],
              [98.94626880046661, 19.778927506514783],
              [98.94640827533539, 19.778452998909383],
              [98.95044231769378, 19.77984622998922],
              [98.95052814838226, 19.78042169144508],
              [98.949401620596, 19.781784618180634],
              [98.94583964702423, 19.77999766741597]]]),
        {
          "Class": "Rubber",
          "system:index": "0"
        }),
    geometry96 = /* color: #ff9999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[98.79892164823349, 19.797994980138505],
              [98.7989243304425, 19.797364061219696],
              [98.79929715749557, 19.79737163226155],
              [98.79930788633163, 19.797989932797076]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry97 = /* color: #99ff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[98.79806870576675, 19.79618802167962],
              [98.79826450702484, 19.79618802167962],
              [98.7982564603978, 19.796458057278155],
              [98.79807407018478, 19.796453009887983]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry98 = /* color: #9999ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[98.75269645807083, 19.792889512490525],
              [98.75272328016098, 19.792147527786632],
              [98.75338310357864, 19.79215257531331],
              [98.75336164590652, 19.793061127507872],
              [98.75271255132492, 19.793061127507872]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry99 = /* color: #ffff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[98.76571053621109, 19.81581866775779],
              [98.76570517179306, 19.814526687883674],
              [98.76681560632522, 19.814541828333603],
              [98.76681560632522, 19.8148294966085],
              [98.76707846280868, 19.814819402993628],
              [98.76709455606277, 19.81581866775779]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry100 = /* color: #99ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[98.6794077789479, 19.79223838324228],
              [98.6810278331929, 19.79223838324228],
              [98.68101173993881, 19.79276332485974],
              [98.67942923662002, 19.792773419873892]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry101 = /* color: #ff99ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[98.68880087491806, 19.790325360201624],
              [98.68989521619613, 19.790315265032266],
              [98.6898898517781, 19.791244017934066],
              [98.68881696817215, 19.791244017934066]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry102 = /* color: #d63000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[98.56863791105087, 19.870798821846005],
              [98.56940502282913, 19.870793776817397],
              [98.56938892957504, 19.871343683990705],
              [98.56863791105087, 19.87134872900182]]]),
        {
          "Class": "DDF",
          "system:index": "0"
        }),
    geometry103 = /* color: #98ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[98.63213116285141, 20.00523203712961],
              [98.63478118535812, 20.00529756669016],
              [98.63476509210403, 20.006628314938844],
              [98.63213652726944, 20.006613192862876]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry104 = /* color: #0b4a8b */ee.Feature(
        ee.Geometry.Polygon(
            [[[98.64964062330063, 20.00244952599827],
              [98.65064913389023, 20.002444485172585],
              [98.6506437694722, 20.00303930148774],
              [98.64962989446457, 20.00303930148774]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry105 = /* color: #ffc82d */ee.Feature(
        ee.Geometry.Polygon(
            [[[98.51224178430374, 19.887108559819453],
              [98.5154765283757, 19.887128737855317],
              [98.51546043512161, 19.889257506197005],
              [98.51220959779556, 19.889217150665132]]]),
        {
          "Class": "DDF",
          "system:index": "0"
        }),
    geometry106 = /* color: #00ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.91237110254104, 19.897272919824378],
              [97.91313284990127, 19.897262831453084],
              [97.91311675664718, 19.8979841483799],
              [97.91237110254104, 19.897979104217015]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry107 = /* color: #bf04c2 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.91427547094162, 19.90115689499627],
              [97.91435325500305, 19.90114932890351],
              [97.91435325500305, 19.901048447632302],
              [97.9151176845723, 19.901058535762317],
              [97.9151176845723, 19.90170417474577],
              [97.91427547094162, 19.9016966086792]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry108 = /* color: #ff0000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.884266916483, 19.900786156026207],
              [97.884266916483, 19.900243917193148],
              [97.88464779016311, 19.90024139514773],
              [97.8846451079541, 19.900793722136328]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry109 = /* color: #00ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.75827819463547, 19.865367755614553],
              [97.75825673696335, 19.864257807434782],
              [97.7597963249379, 19.864277988380117],
              [97.75976413842972, 19.865357665211533],
              [97.75853032228287, 19.865347574807892]]]),
        {
          "Class": "DDF",
          "system:index": "0"
        }),
    geometry110 = /* color: #0000ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.70028615352447, 19.77160529300341],
              [97.7002915179425, 19.770979317742267],
              [97.70105862972076, 19.770984365939686],
              [97.70105862972076, 19.771615389358455]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry111 = /* color: #999900 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.64380687829788, 19.81545782287292],
              [97.644008043974, 19.81546539305373],
              [97.64399463292892, 19.815165108938164],
              [97.6448556220227, 19.81516006214146],
              [97.6448368465596, 19.81580100404125],
              [97.64380419608887, 19.815803527429445]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry112 = /* color: #009999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.65167916175659, 19.821122740733653],
              [97.65244895574386, 19.82113031064474],
              [97.65243554469879, 19.821574411464255],
              [97.65167111512955, 19.821571888167636]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry113 = /* color: #ff00ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.62107247468765, 19.746024125005896],
              [97.62176180240448, 19.746019076018463],
              [97.62176180240448, 19.74667796753011],
              [97.62109125015076, 19.746655247178445]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry114 = /* color: #ff9999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.67666930314834, 19.678802918804],
              [97.67806405183609, 19.678792816583222],
              [97.67806941625412, 19.679550481372893],
              [97.67671221849258, 19.679555532459464]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry115 = /* color: #99ff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.66803795453842, 19.68093952418047],
              [97.66800576803024, 19.67912618953213],
              [97.66898209211166, 19.67911103623132],
              [97.6689713632756, 19.680934473137548],
              [97.66808086988266, 19.680929422094447]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry116 = /* color: #9999ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.72334242221649, 19.668503374055806],
              [97.72338533756073, 19.668503374055806],
              [97.72391909715469, 19.668521054076887],
              [97.72390836831863, 19.669134802171076],
              [97.7233451044255, 19.66913227646357]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry117 = /* color: #ffff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.73316735383804, 19.67019812149601],
              [97.73439580556686, 19.670208224258616],
              [97.73438775893982, 19.671377614727696],
              [97.73315394279297, 19.671377614727696]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry118 = /* color: #99ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.57980937120254, 19.884074258420995],
              [97.5798201000386, 19.88372113561313],
              [97.58085543271835, 19.883723657921692],
              [97.58085275050934, 19.884076780723934],
              [97.58019024488266, 19.884076780723934]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry119 = /* color: #ff99ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.5787579452687, 19.884803202299086],
              [97.57876062747772, 19.884069213814993],
              [97.57960552331741, 19.884071736118006],
              [97.5796028411084, 19.884795635424855],
              [97.57885718700226, 19.884795635424855]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry120 = /* color: #d63000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.44187409040268, 19.906773358045445],
              [97.44282359239395, 19.906783445810497],
              [97.4428155457669, 19.90722478490209],
              [97.44186872598465, 19.90722478490209]]]),
        {
          "Class": "DDF",
          "system:index": "0"
        }),
    geometry121 = /* color: #98ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.712871137827, 19.45105391497031],
              [96.71337002870376, 19.451069089722267],
              [96.71336198207672, 19.451463632775],
              [96.71287918445404, 19.451463632775]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry122 = /* color: #0b4a8b */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.58142948505218, 19.61010826613123],
              [96.58218586799438, 19.610088053040222],
              [96.58218586799438, 19.611017852596845],
              [96.58144557830627, 19.611043118814113]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry123 = /* color: #ffc82d */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.63595879432495, 19.66231019528131],
              [96.63673663493927, 19.662426382729336],
              [96.63666153308685, 19.663042679959098],
              [96.63589978572662, 19.66301237031464]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry124 = /* color: #00ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.66305983421142, 19.791690725960276],
              [96.66411126014526, 19.791695773501434],
              [96.66412735339935, 19.792538710629703],
              [96.6630920207196, 19.792533663115265]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry125 = /* color: #bf04c2 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.42379606124695, 19.937490142019048],
              [96.42455512639816, 19.937487620567662],
              [96.42455512639816, 19.937926352503954],
              [96.4237880146199, 19.93792383105951]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry126 = /* color: #ff0000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.5691315567189, 20.180174031416353],
              [96.56924420949753, 20.18018158408049],
              [96.56923348066147, 20.17939610505031],
              [96.57008105871017, 20.17938855234812],
              [96.57007837650116, 20.180367883013407],
              [96.56914228555496, 20.18037291811661]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry127 = /* color: #00ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.22199201938446, 21.033620155780532],
              [96.22739935275848, 21.03365019769806],
              [96.22741008159454, 21.03663433131988],
              [96.22188473102386, 21.036694413933322]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry128 = /* color: #0000ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.24355161544617, 21.151167772355876],
              [96.24449038860138, 21.15116276932965],
              [96.24449038860138, 21.151678080142993],
              [96.24353552219208, 21.151673077134003]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry129 = /* color: #999900 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.69461334106262, 21.61343978600375],
              [96.69519269820984, 21.613459734987924],
              [96.69518733379181, 21.614073164907907],
              [96.69462943431671, 21.614078152132365]]]),
        {
          "Class": "DDF",
          "system:index": "0"
        }),
    geometry130 = /* color: #009999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.77708053943451, 21.55719765818834],
              [96.77822852489288, 21.5571826906368],
              [96.77821779605682, 21.557601781496192],
              [96.77709126827057, 21.557591803156466]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry131 = /* color: #ff00ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.68241727706726, 21.958800408459116],
              [97.68466496822174, 21.958820309439737],
              [97.68462741729553, 21.96043227961368],
              [97.68239581939514, 21.960417354047784]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry132 = /* color: #ff9999 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.32264995929535, 23.01967595275171],
              [96.32533216831024, 23.0197845722682],
              [96.32535362598236, 23.023230727866913],
              [96.32270360347565, 23.02321097937515]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry133 = /* color: #99ff99 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.19247162696655, 23.101833927598122],
              [96.19347477313812, 23.10184379607707],
              [96.19347745534714, 23.10228540976782],
              [96.19249040242966, 23.102287876879327]]]),
        {
          "Class": "DDF",
          "system:index": "0"
        }),
    geometry134 = /* color: #9999ff */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.15828687307175, 23.13718310009491],
              [96.16014832612808, 23.137212697732405],
              [96.16013223287399, 23.137957569458543],
              [96.15828687307175, 23.137957569458543]]]),
        {
          "Class": "MDF",
          "system:index": "0"
        }),
    geometry135 = /* color: #d63000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.86345699784096, 19.580492732654704],
              [97.86779144760902, 19.580523057866017],
              [97.8677163457566, 19.583070355234046],
              [97.86347845551308, 19.583070355234046]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry136 = /* color: #98ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.85795846936043, 19.62110570577158],
              [97.86001840588386, 19.62117139380618],
              [97.86000231262977, 19.621883854610353],
              [97.85797456261452, 19.621888907512577]]]),
        {
          "Class": "Upland_Evergreen",
          "system:index": "0"
        }),
    geometry137 = /* color: #0b4a8b */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.66379067656334, 19.684417760767747],
              [97.66322204825218, 19.684417760767747],
              [97.6632247304612, 19.683783867400283],
              [97.66433516499336, 19.683793969306286],
              [97.66433516499336, 19.68460211972239],
              [97.66379067656334, 19.684607170649667]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry138 = /* color: #ffc82d */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.65960911270912, 19.6837624008479],
              [97.66007849928673, 19.6837624008479],
              [97.66007849928673, 19.683936658660574],
              [97.65960911270912, 19.683936658660574]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry139 = /* color: #00ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[97.68592694756325, 19.683418935618555],
              [97.6866565084153, 19.683423986583147],
              [97.68665114399727, 19.684413972567814],
              [97.6859376763993, 19.684408921634443]]]),
        {
          "Class": "Pine",
          "system:index": "0"
        }),
    geometry140 = /* color: #d63000 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.25577310082252, 22.65388266488724],
              [96.25626394507225, 22.653892565976143],
              [96.25625321623619, 22.654335638973418],
              [96.25580260512169, 22.65432821318078]]]),
        {
          "Class": "Indaing",
          "system:index": "0"
        }),
    geometry141 = /* color: #98ff00 */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.25413695332344, 22.652357888674075],
              [96.25418255087669, 22.652357888674075],
              [96.25425765272911, 22.65236036397386],
              [96.25436628219421, 22.652520020715645],
              [96.25436225888069, 22.65267348903662],
              [96.25414365884598, 22.6526697760954]]]),
        {
          "Class": "Bamboo",
          "system:index": "0"
        }),
    geometry142 = /* color: #0b4a8b */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.2464765643769, 22.65235541337424],
              [96.24670723435219, 22.65235541337424],
              [96.24670455214317, 22.652573239588317],
              [96.24647388216789, 22.652570764292378]]]),
        {
          "Class": "Indaing",
          "system:index": "0"
        }),
    geometry143 = /* color: #ffc82d */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.23928019758995, 22.65232199682219],
              [96.23928153869446, 22.65196307778729],
              [96.2395055031472, 22.651956889519838],
              [96.23951086756523, 22.652315808570926],
              [96.23931238409813, 22.652319521521722]]]),
        {
          "Class": "Indaing",
          "system:index": "0"
        }),
    geometry144 = /* color: #00ffff */ee.Feature(
        ee.Geometry.Polygon(
            [[[96.25061521288688, 22.644971395375954],
              [96.25100547429855, 22.644957780493993],
              [96.25100413319404, 22.645237504161518],
              [96.25062057730491, 22.645233791019223]]]),
        {
          "Class": "Indaing",
          "system:index": "0"
        });
//----------------------------------------------------ROI--------------------------------------------

var state = ee.FeatureCollection(table);
//print(state);

var roi = state;
Map.centerObject(roi,10);
//print(roi);

var empty = ee.Image().byte();
var outline_roi = empty.paint({
  featureCollection: roi,
  color: 'AREA',
  width: 4
});

var palette = ['FF0000'];
Map.addLayer(outline_roi, {palette: palette, max: 14}, 'different color edges');


var train =ee.FeatureCollection([geometry,geometry2,geometry3,geometry4,geometry5,
                                 geometry6,geometry7,geometry8,geometry9,geometry10,
                                 geometry11,geometry12,geometry13,geometry14,geometry15,
                                 geometry16,geometry17,geometry18,geometry19,geometry20,
                                 geometry21,geometry22,geometry23,geometry24,geometry25,
                                 geometry26,geometry27,geometry28,geometry29,geometry30,
                                 geometry31,geometry32,geometry33,geometry34,geometry35,
                                 geometry36,geometry37,geometry38,geometry39,geometry40,
                                 geometry41,geometry42,geometry43,geometry44,geometry45,
                                 geometry46,geometry47,geometry48,geometry49,geometry50,
                                 geometry51,geometry52,geometry53,geometry54,geometry55,
                                 geometry56,geometry57,geometry58,geometry59,geometry60,
                                 geometry61,geometry62,geometry63,geometry64,geometry65,
                                 geometry66,geometry67,geometry68,geometry69,geometry70,
                                 geometry71,geometry72,geometry73,geometry74,geometry75,
                                 geometry76,geometry77,geometry78,geometry79,geometry80,
                                 geometry81,geometry82,geometry83,geometry84,geometry85,
                                 geometry86,geometry87,geometry88,geometry89,geometry90,
                                 geometry91,geometry92,geometry93,geometry94,geometry95,
                                 geometry96,geometry97,geometry98,geometry99,geometry100,
                                 geometry101,geometry102,geometry103,geometry104,geometry105,
                                 geometry106,geometry107,geometry108,geometry109,geometry110,
                                 geometry111,geometry112,geometry113,geometry114,geometry115,
                                 geometry116,geometry117,geometry118,geometry119,geometry120,
                                 geometry121,geometry122,geometry123,geometry124,geometry125,
                                 geometry126,geometry127,geometry128,geometry129,geometry130,
                                 geometry131,geometry132,geometry133,geometry134,geometry135,
                                 geometry136,geometry137,geometry138,geometry139,geometry140,
                                 geometry141,geometry142,geometry143,geometry144]); 
                                 
print(train);

var training = train.remap(['MDF','Rubber', 'Bamboo', 'Upland_Evergreen', 'Lowland_Evergreen', 'DDF', 'Pine', 'Indaing'], [0, 1, 2, 3, 4, 5, 6, 7], 'Class');
print(training);

var mdf = training.filter(ee.Filter.eq('Class', 0));//.limit(10);
var mdf_size = mdf.size();
print(mdf_size,'mdf_size');

var rubber = training.filter(ee.Filter.eq('Class', 1));//.limit(1);
var rubber_size = rubber.size();
print(rubber_size,'rubber_size');

var bamboo = training.filter(ee.Filter.eq('Class', 2));//.limit(5);
var bamboo_size = bamboo.size();
print(bamboo_size,'bamboo_size');

var up_evg = training.filter(ee.Filter.eq('Class', 3));//.limit(6);
var up_evg_size = up_evg.size();
print(up_evg_size,'up_evg_size');

var low_evg = training.filter(ee.Filter.eq('Class', 4));//.limit(1);
var low_evg_size = low_evg.size();
print(low_evg_size,'low_evg_size');

var ddf = training.filter(ee.Filter.eq('Class', 5));//.limit(4);
var ddf_size = ddf.size();
print(ddf_size,'ddf_size');

var pine = training.filter(ee.Filter.eq('Class', 6));//.limit(5);
var pine_size = pine.size();
print(pine_size,'pine_size');

var ind = training.filter(ee.Filter.eq('Class', 7));//.limit(5);
var ind_size = ind.size();
print(ind_size,'ind_size');

var training1 = mdf.merge(rubber).merge(bamboo).merge(up_evg).merge(low_evg).merge(ddf)
.merge(pine).merge(ind);
print(training1);

/**/

//----------------------------------------------------TP_PCT----------------------------------------------
//Load TP_PCT_Map
var tc = ee.Image(tcc);
var tc_gte25 = tc.gte(25);
var tc_gte10 = tc.gte(10);
//Map.addLayer(tc.clip(roi), {}, 'PCT');
Map.addLayer(tc_gte10.updateMask(tc_gte10), {}, 'tc_gte10');


//---------------------------------------------------Rainfall----------------------------------------------
//Load CHIRPS data
//-----------------------------------------------------SRTM------------------------------------------------
// Load SRTM
var dataset = ee.Image('CGIAR/SRTM90_V4');
var elevation = dataset.select('elevation').unmask(0);
var slope = ee.Terrain.slope(elevation);

Map.addLayer(dataset, {}, 'elevation');
//print(elevation);

var elev5m = elevation.lte(5);
//Map.addLayer(elev5m, {}, 'elev5m');
//-----------------------------------------------------GEDI-------------------------------------------
// Load GEDI
var gedi = ee.ImageCollection('users/potapovpeter/GEDI_V27');
//print(gedi);

var gedi_sasia= gedi.filterMetadata('system:index', 'equals', 'GEDI_SASIA_v27').first();
//print(gedi_sasia,"gedi_sasia");

var gedi_roi  = ee.Image(gedi_sasia).rename('ht');
//print(gedi_roi);
//Map.addLayer(gedi_roi.clip(roi), {min:0, max:25}, 'gedi_roi');


//----------------------------------------------------Radar--Processing---------------------------------------

function toDB(img) {
  return ee.Image(img).log10().multiply(10.0);
}

// The RL speckle filter
function RefinedLee(img) {
  // img must be in natural units, i.e. not in dB!
  // Set up 3x3 kernels 
  var weights3 = ee.List.repeat(ee.List.repeat(1,3),3);
  var kernel3 = ee.Kernel.fixed(3,3, weights3, 1, 1, false);

  var mean3 = img.reduceNeighborhood(ee.Reducer.mean(), kernel3);
  var variance3 = img.reduceNeighborhood(ee.Reducer.variance(), kernel3);

  // Use a sample of the 3x3 windows inside a 7x7 windows to determine gradients and directions
  var sample_weights = ee.List([[0,0,0,0,0,0,0], [0,1,0,1,0,1,0],[0,0,0,0,0,0,0], [0,1,0,1,0,1,0], [0,0,0,0,0,0,0], [0,1,0,1,0,1,0],[0,0,0,0,0,0,0]]);

  var sample_kernel = ee.Kernel.fixed(7,7, sample_weights, 3,3, false);

  // Calculate mean and variance for the sampled windows and store as 9 bands
  var sample_mean = mean3.neighborhoodToBands(sample_kernel); 
  var sample_var = variance3.neighborhoodToBands(sample_kernel);

  // Determine the 4 gradients for the sampled windows
  var gradients = sample_mean.select(1).subtract(sample_mean.select(7)).abs();
  gradients = gradients.addBands(sample_mean.select(6).subtract(sample_mean.select(2)).abs());
  gradients = gradients.addBands(sample_mean.select(3).subtract(sample_mean.select(5)).abs());
  gradients = gradients.addBands(sample_mean.select(0).subtract(sample_mean.select(8)).abs());

  // And find the maximum gradient amongst gradient bands
  var max_gradient = gradients.reduce(ee.Reducer.max());

  // Create a mask for band pixels that are the maximum gradient
  var gradmask = gradients.eq(max_gradient);

  // duplicate gradmask bands: each gradient represents 2 directions
  gradmask = gradmask.addBands(gradmask);

  // Determine the 8 directions
  var directions = sample_mean.select(1).subtract(sample_mean.select(4)).gt(sample_mean.select(4).subtract(sample_mean.select(7))).multiply(1);
  directions = directions.addBands(sample_mean.select(6).subtract(sample_mean.select(4)).gt(sample_mean.select(4).subtract(sample_mean.select(2))).multiply(2));
  directions = directions.addBands(sample_mean.select(3).subtract(sample_mean.select(4)).gt(sample_mean.select(4).subtract(sample_mean.select(5))).multiply(3));
  directions = directions.addBands(sample_mean.select(0).subtract(sample_mean.select(4)).gt(sample_mean.select(4).subtract(sample_mean.select(8))).multiply(4));
  // The next 4 are the not() of the previous 4
  directions = directions.addBands(directions.select(0).not().multiply(5));
  directions = directions.addBands(directions.select(1).not().multiply(6));
  directions = directions.addBands(directions.select(2).not().multiply(7));
  directions = directions.addBands(directions.select(3).not().multiply(8));

  // Mask all values that are not 1-8
  directions = directions.updateMask(gradmask);

  // "collapse" the stack into a singe band image (due to masking, each pixel has just one value (1-8) in it's directional band, and is otherwise masked)
  directions = directions.reduce(ee.Reducer.sum());  

  //var pal = ['ffffff','ff0000','ffff00', '00ff00', '00ffff', '0000ff', 'ff00ff', '000000'];
  //Map.addLayer(directions.reduce(ee.Reducer.sum()), {min:1, max:8, palette: pal}, 'Directions', false);

  var sample_stats = sample_var.divide(sample_mean.multiply(sample_mean));

  // Calculate localNoiseVariance
  var sigmaV = sample_stats.toArray().arraySort().arraySlice(0,0,5).arrayReduce(ee.Reducer.mean(), [0]);

  // Set up the 7*7 kernels for directional statistics
  var rect_weights = ee.List.repeat(ee.List.repeat(0,7),3).cat(ee.List.repeat(ee.List.repeat(1,7),4));

  var diag_weights = ee.List([[1,0,0,0,0,0,0], [1,1,0,0,0,0,0], [1,1,1,0,0,0,0], 
    [1,1,1,1,0,0,0], [1,1,1,1,1,0,0], [1,1,1,1,1,1,0], [1,1,1,1,1,1,1]]);

  var rect_kernel = ee.Kernel.fixed(7,7, rect_weights, 3, 3, false);
  var diag_kernel = ee.Kernel.fixed(7,7, diag_weights, 3, 3, false);

  // Create stacks for mean and variance using the original kernels. Mask with relevant direction.
  var dir_mean = img.reduceNeighborhood(ee.Reducer.mean(), rect_kernel).updateMask(directions.eq(1));
  var dir_var = img.reduceNeighborhood(ee.Reducer.variance(), rect_kernel).updateMask(directions.eq(1));

  dir_mean = dir_mean.addBands(img.reduceNeighborhood(ee.Reducer.mean(), diag_kernel).updateMask(directions.eq(2)));
  dir_var = dir_var.addBands(img.reduceNeighborhood(ee.Reducer.variance(), diag_kernel).updateMask(directions.eq(2)));

  // and add the bands for rotated kernels
  for (var i=1; i<4; i++) {
    dir_mean = dir_mean.addBands(img.reduceNeighborhood(ee.Reducer.mean(), rect_kernel.rotate(i)).updateMask(directions.eq(2*i+1)));
    dir_var = dir_var.addBands(img.reduceNeighborhood(ee.Reducer.variance(), rect_kernel.rotate(i)).updateMask(directions.eq(2*i+1)));
    dir_mean = dir_mean.addBands(img.reduceNeighborhood(ee.Reducer.mean(), diag_kernel.rotate(i)).updateMask(directions.eq(2*i+2)));
    dir_var = dir_var.addBands(img.reduceNeighborhood(ee.Reducer.variance(), diag_kernel.rotate(i)).updateMask(directions.eq(2*i+2)));
  }

  // "collapse" the stack into a single band image (due to masking, each pixel has just one value in it's directional band, and is otherwise masked)
  dir_mean = dir_mean.reduce(ee.Reducer.sum());
  dir_var = dir_var.reduce(ee.Reducer.sum());

  // A finally generate the filtered value
  var varX = dir_var.subtract(dir_mean.multiply(dir_mean).multiply(sigmaV)).divide(sigmaV.add(1.0));

  var b = varX.divide(dir_var);

  var result = dir_mean.add(b.multiply(img.subtract(dir_mean)));
  result= result.arrayFlatten([['sum']]);
  return(result);
}

//-----------------------------------------------------PALSAR-----------------------------------------------
//Load PALSAR

var palsar = ee.ImageCollection('JAXA/ALOS/PALSAR/YEARLY/SAR')
                  .filterBounds(roi)
                  .filterDate('2017-01-01', '2018-01-01')
                  .select('HH', 'HV');
//print(palsar,'PALSAR');

var pal_HH = palsar.select('HH');
//print(pal_HH, 'pal_HH');
//Map.addLayer(pal_HH, {},'pal_HH');

// Convert DN to gamma_nought in natural values

function toGamma(img) { 
  return ee.Image(img).pow(2).divide(ee.Number(10.0).pow(8.3));
}

var palsar_gn = palsar.map(function(img) { return ee.Image(img).pow(2).divide(ee.Number(10.0).pow(8.3))});

var pal_HH_gn = palsar_gn.select('HH').first();
var pal_HV_gn = palsar_gn.select('HV').first();
var pal_HH_HV = pal_HH_gn.divide(pal_HV_gn);

//Map.addLayer(pal_HH, {min:-25, max:0}, "pal_HH");


var pal_HH_urf = toDB(pal_HH_gn);
//print(pal_HH_urf,'pal_HH_urf');
//Map.addLayer(pal_HH_urf.clip(roi),{min:-25.0, max:0.0}, "pal_HH_urf");

var pal_HH_rf = toDB(RefinedLee(pal_HH_gn)).rename('HH');
//print(pal_HH_rf,'pal_HH_rf');
//Map.addLayer(pal_HH_rf.clip(roi),{}, "pal_HH_rf");

var pal_HV_rf = toDB(RefinedLee(pal_HV_gn)).rename('HV');
//print(pal_HV_rf, 'pal_HV_rf');
//Map.addLayer(pal_HV_rf.clip(roi),{min:-25.0, max:0.0}, "pal_HV_rf");

var pal_HH_HV = (pal_HH_rf.divide(pal_HV_rf)).rename('HH_HV');
//print(pal_HH_HV, 'pal_HH_HV');
//Map.addLayer(pal_HH_HV.clip(roi),{min:-1.0, max:1.0}, "pal_HH_HV");

var glcmHH = pal_HH_gn.unitScale(0,1).multiply(255).toByte().glcmTexture({size:3});
//print(glcmHH, 'glcmHH');

var glcmHV = pal_HV_gn.unitScale(0,1).multiply(255).toByte().glcmTexture({size:3});
var glcmHH_HV =pal_HH_HV.unitScale(0,1).multiply(255).toByte().glcmTexture({size:3});

var pal_variables = pal_HH_gn.addBands(pal_HV_gn).addBands(pal_HH_HV)
                             .addBands(glcmHH).addBands(glcmHV).addBands(glcmHH_HV);

//----------------------------------------------------Sentinel-1----------------------------------------------------
//Load Sentinel-1
var s1_col = ee.ImageCollection('COPERNICUS/S1_GRD_FLOAT')
                            .filterBounds(roi)
                            .filter(ee.Filter.eq('instrumentMode', 'IW'))
                            .filterDate('2018-05-01', '2020-04-30')
                            .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))
                            .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                            .filter(ee.Filter.eq('orbitProperties_pass', 'DESCENDING'));
                            
//print(s1_col, 'S1_col');

var s1_col_VV = s1_col.select('VV');
var s1_col_VH = s1_col.select('VH');

//Map.addLayer(S1_col.select('VV'), {}, 'S1_col');
//Map.addLayer(S1_col.select('VH'), {}, 'S1_col');

// Functions to convert from/to dB
function toNatural(img) {
  return ee.Image(10.0).pow(img.select(0).divide(10.0));
}

// convert sigma naught to gamma naught for S1

//function toGamma0(image) {
//  return image.select(1).subtract(image.select('angle').multiply(Math.PI/180.0).cos().log10().multiply(10.0));
//}

//Function applies Refined Lee to all images in collection

var s1_VV_rf = s1_col_VV.map(function(image){
  return toDB(RefinedLee(toNatural(image))).set("system:time_start", image.get('system:time_start'));
});

//print(s1_VV_rf, "s1_VV_rf");

//1 month VV composite from speckle filtered images

var months = ee.List.sequence(1, 12, 1);
//print(months);
var mon = ee.List(['January','February','March','April','May','June','July','August','September','October','November','December']);
var s1_VV_mon_composites = months.map(function(m) {
  var n = ee.Number(m).subtract(1);
  var s1_VV_image = s1_col_VV.filter(ee.Filter.calendarRange({
    start: m, 
    end: ee.Number(m).add(0), 
    field: 'month'
  })).median()
  .set('month', mon.get(n))
  .select(0).rename('VV_rf');
  
  var glcmVV = (s1_VV_image.select(0)).unitScale(0,1).multiply(255).toByte().glcmTexture({size:3});
  
  return s1_VV_image.addBands(glcmVV).float();
});

//print(s1_VV_mon_composites, "s1_VV_mon_composites");
//print(s1_VV_mon_composites.get(0),"s1_VV_mon_composites.get(0)");

var s1_VV_variables = ee.Image(s1_VV_mon_composites.get(0))
                                           .addBands(ee.Image(s1_VV_mon_composites.get(1)))
                                           .addBands(ee.Image(s1_VV_mon_composites.get(2)))
                                           .addBands(ee.Image(s1_VV_mon_composites.get(3)))
                                           .addBands(ee.Image(s1_VV_mon_composites.get(4)))
                                           .addBands(ee.Image(s1_VV_mon_composites.get(5)))
                                           .addBands(ee.Image(s1_VV_mon_composites.get(6)))
                                           .addBands(ee.Image(s1_VV_mon_composites.get(7)))
                                           .addBands(ee.Image(s1_VV_mon_composites.get(8)))
                                           .addBands(ee.Image(s1_VV_mon_composites.get(9)))
                                           .addBands(ee.Image(s1_VV_mon_composites.get(10)))
                                           .addBands(ee.Image(s1_VV_mon_composites.get(11)));


var s1_VH_rf = s1_col_VH.map(function(image){
  return toDB(RefinedLee(toNatural(image))).set("system:time_start", image.get('system:time_start'));
});

//print(s1_VH_rf, "s1_VH_rf");


//1 month VH composite from speckle filtered images

var months = ee.List.sequence(1, 12, 1);
//print(months);
var mon = ee.List(['January','February','March','April','May','June','July','August','September','October','November','December']);
var s1_VH_mon_composites = months.map(function(m) {
  var n = ee.Number(m).subtract(1);
  var s1_VH_image = s1_col_VH.filter(ee.Filter.calendarRange({
    start: m, 
    end: ee.Number(m).add(0), 
    field: 'month'
  })).median()
  .set('month', mon.get(n))
  .select(0).rename('VH_rf');
  
  var glcmVH = (s1_VH_image.select(0)).unitScale(0,1).multiply(255).toByte().glcmTexture({size:3});
  
  return s1_VH_image.addBands(glcmVH).float();
});

//print(s1_VH_mon_composites, "s1_VH_mon_composites");
//print(s1_VH_mon_composites.get(0),"s1_VH_mon_composites.get(0)");

var s1_VH_variables = ee.Image(s1_VH_mon_composites.get(0))
                                           .addBands(ee.Image(s1_VH_mon_composites.get(1)))
                                           .addBands(ee.Image(s1_VH_mon_composites.get(2)))
                                           .addBands(ee.Image(s1_VH_mon_composites.get(3)))
                                           .addBands(ee.Image(s1_VH_mon_composites.get(4)))
                                           .addBands(ee.Image(s1_VH_mon_composites.get(5)))
                                           .addBands(ee.Image(s1_VH_mon_composites.get(6)))
                                           .addBands(ee.Image(s1_VH_mon_composites.get(7)))
                                           .addBands(ee.Image(s1_VH_mon_composites.get(8)))
                                           .addBands(ee.Image(s1_VH_mon_composites.get(9)))
                                           .addBands(ee.Image(s1_VH_mon_composites.get(10)))
                                           .addBands(ee.Image(s1_VH_mon_composites.get(11)));
                                           

//--------------------------------------------------- Sentinel-2------------------------------------------------------

//Load Sentinel-2 SR
// Function to mask clouds using the Sentinel-2 QA band
// @param {ee.Image} image Sentinel-2 image
// @return {ee.Image} cloud masked Sentinel-2 image
 //
function maskS2clouds(image) {
  var qa = image.select('QA60');

  // Bits 10 and 11 are clouds and cirrus, respectively.
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;

  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
      .and(qa.bitwiseAnd(cirrusBitMask).eq(0));
  var prop = image.toDictionary();

  return image.updateMask(mask).divide(10000).set("system:time_start", image.get('system:time_start'));
}

var s2collection = ee.ImageCollection('COPERNICUS/S2_SR')
                  .filterBounds(roi)
                  .filterDate('2015-04-01', '2020-04-30')
                  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE',50))
                  .map(maskS2clouds)
                  .select('B[2-8]', 'B8A', 'B11', 'B12');
//print(s2collection.first());
//print(s2collection.size());

var s2_med = s2collection.median();
//Map.addLayer(s2_med, {min: 0.0, max: 0.3,bands: ['B11', 'B8', 'B3']}, 's2_med');
var s2_med_ndvi =s2_med.normalizedDifference(['B8A', 'B4']);
var s2_water_mask =s2_med_ndvi.lte(0);

//Map.addLayer(s2_water_mask.clip(roi), {}, "s2_water_mask");

//1 month composite

var months = ee.List.sequence(1, 12, 1);
//print(months);
var mon = ee.List(['January','February','March','April','May','June','July','August','September','October','November','December']);
var s2_mon_composites = months.map(function(m) {
  var n = ee.Number(m).subtract(1);
  var s2_img_all_10m = s2collection.filter(ee.Filter.calendarRange({
    start: m, 
    end: ee.Number(m).add(0), 
    field: 'month'
  })).median()
  .set('month', mon.get(n));

  return s2_img_all_10m.float();
});

// Map the function over the collection and display the result.
//print(s2_mon_composites,'s2_mon_composites');

var check0 = ee.Image(s2_mon_composites.get(0));
var check1 = ee.Image(s2_mon_composites.get(1));
var check2 = ee.Image(s2_mon_composites.get(2));
var check3 = ee.Image(s2_mon_composites.get(3));
var check4 = ee.Image(s2_mon_composites.get(4));
var check5 = ee.Image(s2_mon_composites.get(5));
var check6 = ee.Image(s2_mon_composites.get(6));
var check7 = ee.Image(s2_mon_composites.get(7));
var check8 = ee.Image(s2_mon_composites.get(8));
var check9 = ee.Image(s2_mon_composites.get(9));
var check10 = ee.Image(s2_mon_composites.get(10));
var check11 = ee.Image(s2_mon_composites.get(11));

Map.addLayer(check0, {min: 0.0, max: 0.3,bands: ['B11', 'B8', 'B3']}, 'checkjan');
Map.addLayer(check1, {min: 0.0, max: 0.3,bands: ['B11', 'B8', 'B3']}, 'checkfeb');
Map.addLayer(check2, {min: 0.0, max: 0.3,bands: ['B11', 'B8', 'B3']}, 'checkmar');
Map.addLayer(check3, {min: 0.0, max: 0.3,bands: ['B11', 'B8', 'B3']}, 'checkapr');
Map.addLayer(check10, {min: 0.0, max: 0.3,bands: ['B11', 'B8', 'B3']}, 'checknov');
Map.addLayer(check11, {min: 0.0, max: 0.3,bands: ['B11', 'B8', 'B3']}, 'checkdec');

var comp_list = ee.List([check0,check1,check2,check3,check10,check11]);

var image_indices = ee.List([]);
var i;
for (i = 0; i < 6; i++) {
  var image = ee.Image(comp_list.get(i));
  
  var b2 = image.select('B2');
  var b3 = image.select('B3');
  var b4 = image.select('B4');
  var b5 = image.select('B5');
  var b6 = image.select('B6');
  var b7 = image.select('B7');
  var b8 = image.select('B8');
  var b8a = image.select('B8A');
  var b11 = image.select('B11');
  var b12 = image.select('B12');
  var si_1 = (b2.divide(b3).rename('SI_1'));
  var si_2 = (b2.divide(b4).rename('SI_2'));
  var si_3 = (b2.divide(b5).rename('SI_3'));
  var si_4 = (b2.divide(b6).rename('SI_4'));
  var si_5 = (b2.divide(b7).rename('SI_5'));
  var si_6 = (b2.divide(b8).rename('SI_6'));
  var si_7 = (b2.divide(b8a).rename('SI_7'));
  var si_8 = (b2.divide(b11).rename('SI_8'));
  var si_9 = (b2.divide(b12).rename('SI_9'));
  
  var si_10 = (b3.divide(b4).rename('SI_10'));
  var si_11 = (b3.divide(b5).rename('SI_11'));
  var si_12 = (b3.divide(b6).rename('SI_12'));
  var si_13 = (b3.divide(b7).rename('SI_13'));
  var si_14 = (b3.divide(b8).rename('SI_14'));
  var si_15 = (b3.divide(b8a).rename('SI_15'));
  var si_16 = (b3.divide(b11).rename('SI_16'));
  var si_17 = (b3.divide(b12).rename('SI_17'));
  
  var si_18 = (b4.divide(b5).rename('SI_18'));
  var si_19 = (b4.divide(b6).rename('SI_19'));
  var si_20 = (b4.divide(b7).rename('SI_20'));
  var si_21 = (b4.divide(b8).rename('SI_21'));
  var si_22 = (b4.divide(b8a).rename('SI_22'));
  var si_23 = (b4.divide(b11).rename('SI_23'));
  var si_24 = (b4.divide(b12).rename('SI_24'));
  
  var si_25 = (b5.divide(b6).rename('SI_25'));
  var si_26 = (b5.divide(b7).rename('SI_26'));
  var si_27 = (b5.divide(b8).rename('SI_27'));
  var si_28 = (b5.divide(b8a).rename('SI_28'));
  var si_29 = (b5.divide(b11).rename('SI_29'));
  var si_30 = (b5.divide(b12).rename('SI_30'));
  
  var si_31 = (b6.divide(b7).rename('SI_31'));
  var si_32 = (b6.divide(b8).rename('SI_32'));
  var si_33 = (b6.divide(b8a).rename('SI_33'));
  var si_34 = (b6.divide(b11).rename('SI_34'));
  var si_35 = (b6.divide(b12).rename('SI_35'));
    
  var si_36 = (b7.divide(b8).rename('SI_36'));
  var si_37 = (b7.divide(b8a).rename('SI_37'));
  var si_38 = (b7.divide(b11).rename('SI_38'));
  var si_39 = (b7.divide(b12).rename('SI_39'));
    
  var si_40 = (b8.divide(b8a).rename('SI_40'));
  var si_41 = (b8.divide(b11).rename('SI_41'));
  var si_42 = (b8.divide(b12).rename('SI_42'));
    
  var si_43 = (b8a.divide(b11).rename('SI_43'));
  var si_44 = (b8a.divide(b12).rename('SI_44'));
    
  var si_45 = (b11.divide(b12).rename('SI_45'));
    

  var nd_1 = image.normalizedDifference(['B3', 'B2']).rename('ND_1');
  var nd_2 = image.normalizedDifference(['B4', 'B2']).rename('ND_2');
  var nd_3 = image.normalizedDifference(['B8A', 'B2']).rename('ND_3');
  var nd_4 = image.normalizedDifference(['B4', 'B3']).rename('ND_4');
  var nd_5 = image.normalizedDifference(['B8A', 'B3']).rename('ND_5');
    
  var nd_6 = image.normalizedDifference(['B5', 'B2']).rename('ND_6');
  var nd_7 = image.normalizedDifference(['B6', 'B2']).rename('ND_7');
  var nd_8 = image.normalizedDifference(['B7', 'B2']).rename('ND_8');
  var nd_9 = image.normalizedDifference(['B8', 'B2']).rename('ND_9');
  var nd_10 = image.normalizedDifference(['B11', 'B2']).rename('ND_10');
  var nd_11 = image.normalizedDifference(['B12', 'B2']).rename('ND_11');
  
  var nd_12 = image.normalizedDifference(['B5', 'B3']).rename('ND_12');
  var nd_13 = image.normalizedDifference(['B6', 'B3']).rename('ND_13');
  var nd_14 = image.normalizedDifference(['B7', 'B3']).rename('ND_14');
  var nd_15 = image.normalizedDifference(['B8', 'B3']).rename('ND_15');
  var nd_16 = image.normalizedDifference(['B11', 'B3']).rename('ND_16');
  var nd_17 = image.normalizedDifference(['B12', 'B3']).rename('ND_17');
    
  var nd_18 = image.normalizedDifference(['B5', 'B4']).rename('ND_18');
  var nd_19 = image.normalizedDifference(['B6', 'B4']).rename('ND_19');
  var nd_20 = image.normalizedDifference(['B7', 'B4']).rename('ND_20');
  var nd_21 = image.normalizedDifference(['B8', 'B4']).rename('ND_21');
  var nd_22 = image.normalizedDifference(['B11', 'B4']).rename('ND_22');
  var nd_23 = image.normalizedDifference(['B12', 'B4']).rename('ND_23');
  var nd_24 = image.normalizedDifference(['B6', 'B5']).rename('ND_24');
  var nd_25 = image.normalizedDifference(['B7', 'B5']).rename('ND_25');
  var nd_26 = image.normalizedDifference(['B8A', 'B5']).rename('ND_26');
  var nd_27 = image.normalizedDifference(['B8', 'B5']).rename('ND_27');
  var nd_28 = image.normalizedDifference(['B11', 'B5']).rename('ND_28');
  var nd_29 = image.normalizedDifference(['B12', 'B5']).rename('ND_29');
  
  var nd_30 = image.normalizedDifference(['B7', 'B6']).rename('ND_30');
  var nd_31 = image.normalizedDifference(['B8A', 'B6']).rename('ND_31');
  var nd_32 = image.normalizedDifference(['B8', 'B6']).rename('ND_32');
  var nd_33 = image.normalizedDifference(['B11', 'B6']).rename('ND_33');
  var nd_34 = image.normalizedDifference(['B12', 'B6']).rename('ND_34');
  
  var nd_35 = image.normalizedDifference(['B8A', 'B7']).rename('ND_35');
  var nd_36 = image.normalizedDifference(['B8', 'B7']).rename('ND_36');
  var nd_37 = image.normalizedDifference(['B11', 'B7']).rename('ND_37');
  var nd_38 = image.normalizedDifference(['B12', 'B7']).rename('ND_38');
    
  var nd_39 = image.normalizedDifference(['B8', 'B8A']).rename('ND_39');
  var nd_40 = image.normalizedDifference(['B11', 'B8A']).rename('ND_40');
  var nd_41 = image.normalizedDifference(['B12', 'B8A']).rename('ND_41');
    
  var nd_42 = image.normalizedDifference(['B11', 'B8']).rename('ND_42');
  var nd_43 = image.normalizedDifference(['B12', 'B8']).rename('ND_43');
    
  var nd_44 = image.normalizedDifference(['B12', 'B11']).rename('ND_44');
      

  
  var ndvi = image.normalizedDifference(['B8A', 'B4']).rename('NDVI');
    
  var evi = image.expression('2.5 * ((nir - red) / (nir + 6 * red - 7.5 * blue + 1))',{
       'nir': image.select('B8A'), 'red': image.select('B4'), 'blue': image.select('B2')});
    
    
  var savi = image.expression('1.5 * ((nir - red) / (nir + red + 0.5))',{
    'nir': image.select('B8A'), 'red': image.select('B4')});
        
  var wri = (b3.add(b4).divide(b8a.add(b11)).rename('WRI'));
    
  var awei = image.expression('4 * (green - swir1) - (0.25 * nir + 2.75 * swir1)',{
    'green': image.select('B3'), 'swir1': image.select('B11'), 'nir': image.select('B8A')});
  
  var ccci = image.expression('((nir - vre1) / (nir + vre2)) / ((nir - red) / (nir + red))', {
      'nir': image.select('B8A'), 'red': image.select('B4'),'vre1': image.select('B5'), 
      'vre2': image.select('B6')});
      
  var s2rep = image.expression('705.0 + 35.0 * ((((red + vre3) / 2.0) - vre1) / (vre2 - vre1))',{
    'red': image.select('B4'),'vre1': image.select('B5'), 'vre2': image.select('B6'),
    'vre3': image.select('B7')});
    
  var ireci = image.expression('(nir - red)/(vre1/vre2)', { 
    'nir': image.select('B8A'), 'red': image.select('B4'),'vre1': image.select('B5'), 
    'vre2': image.select('B6')});

  
  var glcm_b = b2.multiply(255).int().glcmTexture({size:3});
  var glcm_g = b3.multiply(255).int().glcmTexture({size:3});
  var glcm_r = b4.multiply(255).int().glcmTexture({size:3});
  var glcm_nir = b8.multiply(255).int().glcmTexture({size:3});
  var glcm_swir1 = b11.multiply(255).int().glcmTexture({size:3});
  var glcm_swir2 = b12.multiply(255).int().glcmTexture({size:3});
  var glcm_vre1 = b5.multiply(255).int().glcmTexture({size:3});
  var glcm_vre2 = b6.multiply(255).int().glcmTexture({size:3});
  var glcm_vre3 = b7.multiply(255).int().glcmTexture({size:3});
  var glcm_nnir = b8a.multiply(255).int().glcmTexture({size:3});
  
 
  var image = image
               .addBands(si_1)
               .addBands(si_2)
               .addBands(si_3)
               .addBands(si_4)
               .addBands(si_5)
               .addBands(si_6)
              
               .addBands(si_7)
               .addBands(si_8)
               .addBands(si_9)
               .addBands(si_10)
              
               .addBands(si_11)
               .addBands(si_12)
             
               
               .addBands(si_13)
               .addBands(si_14)
               .addBands(si_15)
               .addBands(si_16)
              
               .addBands(si_17)
               .addBands(si_18)
               
               
               .addBands(si_19)
               .addBands(si_20)
               .addBands(si_21)
               .addBands(si_22)
             
               .addBands(si_23)
               .addBands(si_24)
               
               
               .addBands(si_25)
               .addBands(si_26)
               .addBands(si_27)
               .addBands(si_28)
               
               .addBands(si_31)
               .addBands(si_32)
               .addBands(si_33)
               .addBands(si_34)
               .addBands(si_35)
               .addBands(si_36)
               .addBands(si_37)
               .addBands(si_38)
               .addBands(si_39)
               .addBands(si_40)
               
               .addBands(si_41)
               .addBands(si_42)
               
               .addBands(si_43)
               .addBands(si_44)
               
               .addBands(si_45)
               .addBands(nd_1)
               .addBands(nd_2)
               .addBands(nd_3)
               .addBands(nd_4)
               .addBands(nd_5)
              
               .addBands(nd_6)
               .addBands(nd_7)
               .addBands(nd_8)
               .addBands(nd_9)
             
               .addBands(nd_10)
               .addBands(nd_11)
               
               .addBands(nd_12)
               .addBands(nd_13)
               .addBands(nd_14)
               .addBands(nd_15)
              
               .addBands(nd_16)
               .addBands(nd_17)
               
               
               .addBands(nd_18)
               .addBands(nd_19)
               .addBands(nd_20)
               .addBands(nd_21)
              
               .addBands(nd_22)
               .addBands(nd_23)
               
               .addBands(nd_24)
               .addBands(nd_25)
               .addBands(nd_26)
               .addBands(nd_27)
               .addBands(nd_28)
               .addBands(nd_29)
               .addBands(nd_30)
               .addBands(nd_31)
               .addBands(nd_32)
               .addBands(nd_33)
               .addBands(nd_34)
               .addBands(nd_35)
               .addBands(nd_36)
               .addBands(nd_37)
               .addBands(nd_38)
               .addBands(nd_39)
               
               .addBands(nd_40)
               .addBands(nd_41)
               
               .addBands(nd_42)
               .addBands(nd_43)
               
               .addBands(nd_44)
               .addBands(ndvi)
               .addBands(evi.rename('EVI'))
               .addBands(savi.rename('SAVI'))
               .addBands(wri)
               .addBands(awei.rename('AWEI'))
               
               .addBands(ccci.rename('CCC1'))
               .addBands(s2rep.rename('S2REP'))
               .addBands(ireci.rename('IRECI'))
               
               .addBands(glcm_b)
               .addBands(glcm_g)
               .addBands(glcm_r)
               .addBands(glcm_nir)
               .addBands(glcm_swir1)
               .addBands(glcm_swir2)
               
               .addBands(glcm_vre1)
               .addBands(glcm_vre2)
               .addBands(glcm_vre3)
               .addBands(glcm_nnir);
  //print(image,i);
  
  var image_indices = image_indices.add(image);
}

//print(image_indices);

//Monthly NDVI

var Jan_composite = ee.Image(image_indices.get(0));
var Jan_ndvi = Jan_composite.select ("NDVI");
var Jan_ndvi_mask = Jan_ndvi.gte(0.5);

var Feb_composite = ee.Image(image_indices.get(1));
var Feb_ndvi = Feb_composite.select ("NDVI");
var Feb_ndvi_mask = Feb_ndvi.gte(0.5);

var Mar_composite = ee.Image(image_indices.get(2));
var Mar_ndvi = Mar_composite.select ("NDVI");
var Mar_ndvi_mask = Mar_ndvi.gte(0.5);

var Apr_composite = ee.Image(image_indices.get(3));
var Apr_ndvi = Apr_composite.select ("NDVI");
var Apr_ndvi_mask = Apr_ndvi.gte(0.5);

var Nov_composite = ee.Image(image_indices.get(4));
var Nov_ndvi = Nov_composite.select ("NDVI");
var Nov_ndvi_mask = Nov_ndvi.gte(0.5);

var Dec_composite = ee.Image(image_indices.get(5));
var Dec_ndvi = Dec_composite.select ("NDVI");
var Dec_ndvi_mask = Dec_ndvi.gte(0.5);

var six_month_ndvi = Jan_ndvi_mask.add(Feb_ndvi_mask).add(Mar_ndvi_mask)
                                  .add(Apr_ndvi_mask).add(Nov_ndvi_mask).add(Dec_ndvi_mask);

var nf_mask = six_month_ndvi.gte(6);                  
//print(nf_mask,{},"nf_mask");
//Map.addLayer(nf_mask.updateMask(nf_mask), {},"nf_mask");

var forest1 = tc_gte25.unmask(0);
Map.addLayer(forest1.updateMask(forest1), {},"forest1");

var forest2 = nf_mask.eq(1).unmask(0);
Map.addLayer(forest2.updateMask(forest2), {},"forest2");

var forest = forest1.add(forest2);
forest= forest.gte(1);
Map.addLayer(forest.updateMask(forest), {},"forest");

var water = Jan_ndvi.lte(0)
            .and(Feb_ndvi.lte(0))
            .and(Mar_ndvi.lte(0))
            .and(Apr_ndvi.lte(0))
            .and(Nov_ndvi.lte(0))
            .and(Dec_ndvi.lte(0));
            
water = water.gte(1);            
Map.addLayer(water.updateMask(water), {},"water");


var evg = Jan_ndvi.gte(0.7).and(Feb_ndvi.gte(0.7))
                           .and(Mar_ndvi.gte(0.7))
                           .and(Apr_ndvi.gte(0.7))
                           .and(Nov_ndvi.gte(0.7))
                           .and(Dec_ndvi.gte(0.7));
                           
Map.addLayer(evg.updateMask(evg), {},'evg');

var area_mask =ee.Image.constant(1).clip(table).mask();

//---------------------------------------------------Build-Classification-Composite---------------------------------------

// convert list of images to single image
var class_composite = ee.Image(image_indices.get(0)).addBands(image_indices.get(1))
                                                    .addBands(image_indices.get(2))
                                                    .addBands(image_indices.get(3))
                                                    .addBands(image_indices.get(4))
                                                    .addBands(image_indices.get(5))
                                                    .addBands(gedi_roi)
                                                    .addBands(pal_variables)
                                                    .addBands(s1_VV_variables)
                                                    .addBands(s1_VH_variables)
                                                    .addBands(elevation)
                                                    .addBands(slope)
                                                    .updateMask(forest)
                                                    .updateMask(area_mask);
                                                    
print(class_composite);

var sel_bands = (['B4_savg_2','B11_savg','ND_10_4','ND_6_3','ND_23_3','elevation','SI_9_4','SI_3_3',
'SI_1_3','B7_savg','SI_11_3','SI_4_3','ND_10_3','SI_5_1','B4_dent_2','ND_12_3','SI_7_1','SI_10',
'B8_savg','ND_9_1','ND_7_3','SI_8_4']);

class_composite = class_composite.select(sel_bands);

var bands = class_composite.bandNames();
print(bands.size());
Map.addLayer(class_composite, {}, 'class_composite');


//----------------------------------------------------Train--Classifier----------------------------------------------------

//Training

var training = class_composite.sampleRegions({
      // Get the sample from the polygons FeatureCollection.
      collection: training,
      // Keep this list of properties from the polygons.
      properties: ['Class'],
      // Set the scale to get Sentinel pixels in the polygons.
      scale: 20,
      tileScale:16
      });
//print(training.limit(10));
print(training.size());

print(training.filter(ee.Filter.eq('Class', 0)));


var mdf_size = (training.filter(ee.Filter.eq('Class', 0))).size();
print(mdf_size,'mdf_size');

var rubber_size = (training.filter(ee.Filter.eq('Class', 1))).size();
print(rubber_size,'rubber_size');

var bamboo_size = (training.filter(ee.Filter.eq('Class', 2))).size();
print(bamboo_size,'bamboo_size');

var up_evg_size = (training.filter(ee.Filter.eq('Class', 3))).size();
print(up_evg_size,'up_evg_size');

var low_evg_size = (training.filter(ee.Filter.eq('Class', 4))).size();
print(low_evg_size,'low_evg_size');

var ddf = training.filter(ee.Filter.eq('Class', 5));
var ddf_size = (training.filter(ee.Filter.eq('Class', 5))).size();
print(ddf_size,'ddf_size');

var pine = training.filter(ee.Filter.eq('Class', 6));
var pine_size = (training.filter(ee.Filter.eq('Class', 6))).size();
print(pine_size,'pine');



training = training.filter(ee.Filter.eq('Class', 0))//.limit(50)
           .merge(training.filter(ee.Filter.eq('Class', 1)))//.limit(100))
           .merge(training.filter(ee.Filter.eq('Class', 2)))//.limit(100))
           .merge(training.filter(ee.Filter.eq('Class', 3)))//.limit(100))
           .merge(training.filter(ee.Filter.eq('Class', 4)))//.limit(100))
           .merge(training.filter(ee.Filter.eq('Class', 5)))//.limit(20))
           .merge(training.filter(ee.Filter.eq('Class', 6)).limit(20))
           .merge(training.filter(ee.Filter.eq('Class', 7)));
           

print(training, 'train for IV');


var classifier = ee.Classifier.smileRandomForest(500)
                .train({
                  features: training, 
                  classProperty:'Class', 
                  inputProperties:bands,
                });
                
var dict = classifier.explain();
//print('Explain:',dict);    


var variable_importance = ee.FeatureCollection(ee.Feature(null, ee.Dictionary(dict).get('importance')));

/*
var chart =ui.Chart.feature.byProperty(variable_importance)
.setChartType('ColumnChart')
.setOptions({
title: 'Random Forest Variable Importance',
legend: {position: 'none'},
hAxis: {title: 'Bands'},
vAxis: {title: 'Importance'}
});
 
print(chart);
/**/

//----------------------------------------------Export--Important--Variables-------------------------------------------


// Export the FeatureCollection to a KML file.
Export.table.toDrive({
  collection: variable_importance,
  description:'RF_IV_Shan',
  fileFormat: 'CSV'
});

//----------------------------------------------Selected--Bands-------------------------------------


//----------------------------------------------Generate--Classified--Map-----------------------------------------

var classified = class_composite.classify(classifier).unmask(100);

// Define a palette from the IGBP classification.

//var Palette = ['152106', '225129', '369b47', '30eb5b', '387242', '6a2325', 'c3aa69'];

var Palette = ['#008000', '#00FF00', '#808000', '#FFFF00', '#FF00FF', '6a2325', 'c3aa69']; //green, lime, olive,yellow,fuchsia

Map.addLayer(classified, {palette: Palette, min: 0, max: 7}, 'classification');


//---------------------------------------------Export---Maps--------------------------------------------------------

// Export the image, specifying scale and region.
Export.image.toDrive({
  image: classified,
  description: 'FT_Shan_Run9',
  scale: 20,
  region: roi,
  maxPixels:755668800
});
